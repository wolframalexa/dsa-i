Using l.sort():
 T1: 0.156 s
 T2: 2.5   s
 T3: 0.984 s
 T4: 3.234 s

Using sort():
 T1: 0.234
 T2: 2.813
 T3: never ends :/
 T4: 1.656 s

Presubmission 1:
My computer / Sable's computer:

 T1: 0.313 s / 0.275978
 T2: 3.843 s / 3.9644
 T3: 1.094 s / did not run
 T4: 1.641 s / 1.15302

Using stable_sort() (provided implementation of mergesort):
 T1: 0.25 s
 T2: 2.906 s
 T3: 1.313 s (but incorrect)
 T4: 1.844 s

Using my implementation of sorting in place:
 T1: 0.172 s
 T2: 2.969 s
 T3: 1.610 s
 T4: 3.858 s






To do:
 T1: sort inplace: figure out how to implement w pointers instead of indices
 T2: 
 T3: 
 T4: 

Current fastest sort on Sable's computer:
 T1: sorting in place		        presub 1
 T2: sorting in place			presub 1
 T3: l.sort()				idk dude
 T4: my implementation of sort()	presub 1
